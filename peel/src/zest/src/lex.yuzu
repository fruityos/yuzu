{

	the zest lexer

}

sub lex_get_keyword_str()
	return "push$pop$mov$lea$add$sub$mul$div$and$or$xor$shl$shr$neg$not$test$cmp$setcc$call$ret$jmp$jnz$jz$db$extern$global$bits$rax$rdi$rsi$rdx$rcx$r8$r9$rbp$rsp$cl$dl$bits$syscall$qword$,$[$]$-$+$"
end

sub lex_is_numeric(c)
	return (c >= (["0"] & 255)) && (c <= (["9"] & 255))
end

sub lex_is_alpha(c)
	return  ((c >= (["A"] & 255)) && (c <= (["Z"] & 255))) ||
		((c >= (["a"] & 255)) && (c <= (["z"] & 255)))
end

sub lex_get_next_keyword(keywordStr)
	while (([keywordStr] & 255) != (["$"] & 255)) do
		keywordStr = keywordStr + 1
	end
	return keywordStr + 1
end

sub lex_print_keyword(keywordStr)
	while (([keywordStr] & 255) != (["$"] & 255)) do
		putch([keywordStr] & 255)
		keywordStr = keywordStr + 1
	end
end

sub lex_keyword_compare(str, k, n)
	local i
	while (([str] & 255) == ([k] & 255)) && (i < n) do
		str = str + 1
		k = k + 1
		i = i + 1
	end
	return ([k] & 255) == (["$"] & 255)
end

sub lex_keyword_lookup(str, n)
	local k, i, ret
	ret = -1
	k = lex_get_keyword_str()
	while [k] & 255 do
		if lex_keyword_compare(str, k, n) then
			ret = i
		end
		k = lex_get_next_keyword(k)
		i = i + 1
	end
	return ret
end

sub lex_get_next_token(buffer, out)
	local c, len
	while c = [buffer] & 255 do

		if c == ([";"] & 255) then
			len = 0
			while c && (c != 10) do
				c = [buffer + len] & 255
				len = len + 1
			end
			buffer = buffer + len - 1 { we're going to add 1 later }
		end

		if lex_is_alpha(c) then
			while lex_is_alpha(c) ||
                              lex_is_numeric(c) || 
                              (c == ([":"] & 255)) ||
                              (c == (["_"] & 255))
			do
				[out] = c
				buffer = buffer + 1
				out = out + 1
				c = [buffer] & 255
			end
			[out] = 0
			return buffer
		end

		if lex_is_numeric(c) then
			while lex_is_numeric(c) do
				[out] = c
				buffer = buffer + 1
				out = out + 1
				c = [buffer] & 255
			end
			[out] = 0
			return buffer
		end

		if (c == ([","] & 255)) || 
		   (c == (["["] & 255)) ||
	           (c == (["]"] & 255)) ||
		   (c == (["-"] & 255)) ||
		   (c == (["+"] & 255))
		then
			[out] = c
			[out + 1] = 0
			return buffer + 1
		end

		buffer = buffer + 1
	end
	return 0
end

sub lex_puts(str)
	local c
	putch(["'"]&255)
	while c = [str] & 255 do
		putch(c)
		str = str + 1
	end
	putch(["'"]&255)
end
